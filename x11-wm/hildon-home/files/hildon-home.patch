diff -ur aaa/configure.ac bbb/configure.ac
--- aaa/configure.ac	2012-07-24 15:02:56.000000000 +0400
+++ bbb/configure.ac	2012-07-24 15:05:27.000000000 +0400
@@ -52,9 +52,9 @@
 
 if test "x${hildon_use_instrumenting}" = "xyes"
 then
-    CFLAGS="$CFLAGS -Wall -Wmissing-prototypes -Wmissing-declarations -Werror -Wno-format-extra-args -g -finstrument-functions"
+    CFLAGS="$CFLAGS -Wall -Wmissing-prototypes -Wmissing-declarations -Wno-format-extra-args -g -finstrument-functions"
 else
-    CFLAGS="$CFLAGS -Wall -Wmissing-prototypes -Wmissing-declarations -Werror -Wno-format-extra-args -DG_DISABLE_CAST_CHECKS"
+    CFLAGS="$CFLAGS -Wall -Wmissing-prototypes -Wmissing-declarations -Wno-format-extra-args -DG_DISABLE_CAST_CHECKS"
 fi
 
 AC_SUBST(CFLAGS)
diff -ur aaa/src/hd-activate-views-dialog.c bbb/src/hd-activate-views-dialog.c
--- aaa/src/hd-activate-views-dialog.c	2012-07-24 15:02:56.000000000 +0400
+++ bbb/src/hd-activate-views-dialog.c	2012-07-24 15:05:04.000000000 +0400
@@ -201,8 +201,13 @@
   /* Create Touch grid list */
   priv->model = (GtkTreeModel *) gtk_list_store_new (NUM_COLS, GDK_TYPE_PIXBUF);
 
+#ifdef MAEMO_GTK
   priv->icon_view = hildon_gtk_icon_view_new_with_model (HILDON_UI_MODE_EDIT,
                                                          priv->model);
+#else
+  priv->icon_view = gtk_icon_view_new_with_model (priv->model);
+#endif
+
   gtk_icon_view_set_selection_mode (GTK_ICON_VIEW (priv->icon_view),
                                     GTK_SELECTION_MULTIPLE);
   gtk_icon_view_set_columns (GTK_ICON_VIEW (priv->icon_view),
@@ -359,7 +364,7 @@
   gtk_widget_show (pannable);
   gtk_container_add (GTK_CONTAINER (pannable),
                      priv->icon_view);
-  gtk_container_add (GTK_CONTAINER (GTK_DIALOG (dialog)->vbox),
+  gtk_container_add (GTK_CONTAINER (gtk_dialog_get_content_area(GTK_DIALOG (dialog))),
 /*                     priv->icon_view); */
                     pannable);
 }
diff -ur aaa/src/hd-applet-manager.c bbb/src/hd-applet-manager.c
--- aaa/src/hd-applet-manager.c	2012-07-24 15:02:56.000000000 +0400
+++ bbb/src/hd-applet-manager.c	2012-07-24 15:05:04.000000000 +0400
@@ -259,7 +259,7 @@
       gtk_widget_realize (GTK_WIDGET (plugin));
       display = GDK_DISPLAY_XDISPLAY (gtk_widget_get_display (GTK_WIDGET (plugin)));
       root = RootWindow (display, GDK_SCREEN_XNUMBER (gtk_widget_get_screen (GTK_WIDGET (plugin))));
-      XSetTransientForHint (display, GDK_WINDOW_XID (GTK_WIDGET (plugin)->window), root);
+      XSetTransientForHint (display, GDK_WINDOW_XID (gtk_widget_get_window (GTK_WIDGET (plugin))), root);
 
       if (priv->plugins_throttled)
         {
diff -ur aaa/src/hd-bookmark-shortcut.c bbb/src/hd-bookmark-shortcut.c
--- aaa/src/hd-bookmark-shortcut.c	2012-07-24 15:02:56.000000000 +0400
+++ bbb/src/hd-bookmark-shortcut.c	2012-07-24 15:05:04.000000000 +0400
@@ -465,7 +465,7 @@
   cairo_surface_t *bg;
   cairo_surface_t *thumbnail_icon;
 
-  cr = gdk_cairo_create (GDK_DRAWABLE (widget->window));
+  cr = gdk_cairo_create (gtk_widget_get_window (widget));
   gdk_cairo_region (cr, event->region);
   cairo_clip (cr);
 
diff -ur aaa/src/hd-change-background-dialog.c bbb/src/hd-change-background-dialog.c
--- aaa/src/hd-change-background-dialog.c	2012-07-24 15:02:56.000000000 +0400
+++ bbb/src/hd-change-background-dialog.c	2012-07-24 15:05:04.000000000 +0400
@@ -438,7 +438,7 @@
                 NULL);
 
   gtk_widget_show (priv->selector);
-  gtk_container_add (GTK_CONTAINER (GTK_DIALOG (dialog)->vbox), priv->selector);
+  gtk_container_add (GTK_CONTAINER (gtk_dialog_get_content_area(GTK_DIALOG (dialog))), priv->selector);
 
   if (hd_change_background_dialog_is_portrait ())
     gtk_widget_set_size_request (GTK_WIDGET (dialog), -1, 678);
diff -ur aaa/src/hd-incoming-event-window.c bbb/src/hd-incoming-event-window.c
--- aaa/src/hd-incoming-event-window.c	2012-07-24 15:02:56.000000000 +0400
+++ bbb/src/hd-incoming-event-window.c	2012-07-24 15:05:04.000000000 +0400
@@ -189,10 +189,10 @@
   GdkDisplay *dpy;
 
   /* Check if widget is realized. */
-  if (!GTK_WIDGET_REALIZED (widget))
+  if (!gtk_widget_get_realized (widget))
     return;
 
-  window = widget->window;
+  window = gtk_widget_get_window (window);
 
   dpy = gdk_drawable_get_display (window);
   atom = gdk_x11_get_xatom_by_name_for_display (dpy, prop);
@@ -273,7 +273,7 @@
   GdkScreen *screen;
   const gchar *notification_type, *icon;
   GtkIconSize icon_size;
-  GdkPixmap *pixmap;
+  cairo_surface_t *s;
   cairo_t *cr;
 
   screen = gtk_widget_get_screen (widget);
@@ -288,7 +288,7 @@
   GTK_WIDGET_CLASS (hd_incoming_event_window_parent_class)->realize (widget);
 
   /* Notification window */
-  gdk_window_set_type_hint (widget->window, GDK_WINDOW_TYPE_HINT_NOTIFICATION);
+  gdk_window_set_type_hint (gtk_widget_get_window (widget), GDK_WINDOW_TYPE_HINT_NOTIFICATION);
 
   /* Set the _NET_WM_WINDOW_TYPE property to _HILDON_WM_WINDOW_TYPE_HOME_APPLET */
   if (priv->preview)
@@ -321,27 +321,24 @@
   hd_incoming_event_window_update_title_and_amount (HD_INCOMING_EVENT_WINDOW (widget));
 
   /* Set background to transparent pixmap */
-  pixmap = gdk_pixmap_new (GDK_DRAWABLE (widget->window), 1, 1, -1);
-  cr = gdk_cairo_create (GDK_DRAWABLE (pixmap));
+  s = cairo_image_surface_create (CAIRO_FORMAT_A1, 1, 1);
+  cr = gdk_cairo_create (s);
   cairo_set_operator (cr, CAIRO_OPERATOR_SOURCE);
   cairo_set_source_rgba (cr, 0.0, 0.0, 0.0, 0.0);
   cairo_paint (cr);
   cairo_destroy (cr);
 
-  gdk_window_set_back_pixmap (widget->window, pixmap, FALSE);
-  g_object_unref(pixmap);
+  gdk_window_set_back_pixmap (gtk_widget_get_window (widget), s, FALSE);
+  g_object_unref(s);
 }
 
 static gboolean
-hd_incoming_event_window_expose_event (GtkWidget *widget,
-                                       GdkEventExpose *event)
+hd_incoming_event_window_draw (GtkWidget *widget,
+                                       cairo_t *cr)
 {
   HDIncomingEventWindowPrivate *priv = HD_INCOMING_EVENT_WINDOW (widget)->priv;
-  cairo_t *cr;
 
-  cr = gdk_cairo_create (GDK_DRAWABLE (widget->window));
-  gdk_cairo_region (cr, event->region);
-  cairo_clip (cr);
+  cr = gdk_cairo_create (gtk_widget_get_window (widget));
 
   cairo_set_operator (cr, CAIRO_OPERATOR_SOURCE);
 
@@ -355,8 +352,8 @@
 
   cairo_destroy (cr);
 
-  return GTK_WIDGET_CLASS (hd_incoming_event_window_parent_class)->expose_event (widget,
-                                                                                 event);
+  return GTK_WIDGET_CLASS (hd_incoming_event_window_parent_class)->draw (widget,
+                                                                                 cr);
 }
 
 static void
@@ -524,7 +521,7 @@
   widget_class->delete_event = hd_incoming_event_window_delete_event;
   widget_class->map_event = hd_incoming_event_window_map_event;
   widget_class->realize = hd_incoming_event_window_realize;
-  widget_class->expose_event = hd_incoming_event_window_expose_event;
+  widget_class->draw = hd_incoming_event_window_draw;
 
   object_class->dispose = hd_incoming_event_window_dispose;
   object_class->finalize = hd_incoming_event_window_finalize;
diff -ur aaa/src/hd-install-widgets-dialog.c bbb/src/hd-install-widgets-dialog.c
--- aaa/src/hd-install-widgets-dialog.c	2012-07-24 15:02:56.000000000 +0400
+++ bbb/src/hd-install-widgets-dialog.c	2012-07-24 15:05:04.000000000 +0400
@@ -98,8 +98,10 @@
                 "text-column", hd_widgets_get_text_column (priv->widgets),
                 NULL);
 
+#ifdef MAEMO_GTK
   hildon_touch_selector_set_hildon_ui_mode (HILDON_TOUCH_SELECTOR (priv->selector),
                                             HILDON_UI_MODE_NORMAL);
+#endif /* MAEMO_GTK */
   hildon_picker_dialog_set_selector (HILDON_PICKER_DIALOG (object),
                                      HILDON_TOUCH_SELECTOR (priv->selector));
 
diff -ur aaa/src/hd-system-notifications.c bbb/src/hd-system-notifications.c
--- aaa/src/hd-system-notifications.c	2012-07-24 15:02:56.000000000 +0400
+++ bbb/src/hd-system-notifications.c	2012-07-24 15:05:04.000000000 +0400
@@ -95,7 +95,7 @@
 }
 
 static void
-progressbar_destroy_cb (GtkObject *progressbar,
+progressbar_destroy_cb (GtkAdjustment *progressbar,
                         gpointer   user_data)
 {
   g_source_remove (GPOINTER_TO_UINT (user_data));
@@ -132,9 +132,8 @@
     }
   else
     {
-      note = hildon_note_new_information_with_icon_name (NULL, 
-                                                         body, 
-                                                         icon_name);
+      note = hildon_note_new_information (NULL, 
+                                          body);
     }
 
   /* If there's a default action, get the label and set
diff -ur aaa/src/hd-task-shortcut.c bbb/src/hd-task-shortcut.c
--- aaa/src/hd-task-shortcut.c	2012-07-24 15:02:56.000000000 +0400
+++ bbb/src/hd-task-shortcut.c	2012-07-24 15:05:04.000000000 +0400
@@ -191,17 +191,14 @@
 }
 
 static gboolean
-hd_task_shortcut_expose_event (GtkWidget *widget,
-                               GdkEventExpose *event)
+hd_task_shortcut_draw (GtkWidget *widget,
+                               cairo_t   *cr)
 {
   HDTaskShortcutPrivate *priv = HD_TASK_SHORTCUT (widget)->priv; 
-  cairo_t *cr;
   cairo_surface_t *bg;
 
-  cr = gdk_cairo_create (GDK_DRAWABLE (widget->window));
-  gdk_cairo_region (cr, event->region);
-  cairo_clip (cr);
-  
+  cr = gdk_cairo_create (gtk_widget_get_window (widget));
+
   if (priv->button_pressed)
     bg = priv->bg_active;
   else
@@ -220,8 +217,8 @@
 
   cairo_destroy (cr);
 
-  return GTK_WIDGET_CLASS (hd_task_shortcut_parent_class)->expose_event (widget,
-                                                                         event);
+  return GTK_WIDGET_CLASS (hd_task_shortcut_parent_class)->draw (widget,
+                                                                         cr);
 }
 
 static void
@@ -254,7 +251,7 @@
   object_class->finalize = hd_task_shortcut_finalize;
 
   widget_class->realize = hd_task_shortcut_realize;
-  widget_class->expose_event = hd_task_shortcut_expose_event;
+  widget_class->draw = hd_task_shortcut_draw;
   widget_class->show = hd_task_shortcut_show;
 
   g_type_class_add_private (klass, sizeof (HDTaskShortcutPrivate));
